{"version":3,"sources":["components/Header/index.js","components/Directory/index.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","id","onChange","handleInputChange","value","search","name","type","className","placeholder","Directory","users","results","filter","user","fullname","toLowerCase","includes","map","phone","replace","dobMatches","dob","match","src","picture","alt","href","email","onClick","sortByName","sortByPhone","sortByEmail","sortByDOB","API","query","axios","get","App","state","ascending","searchRandomUsers","then","res","formattedData","data","length","repeat","interCodeLength","slice","cell","large","first","last","date","setState","sort","a","b","nameA","toUpperCase","nameB","catch","err","console","log","event","target","order","x","y","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUA4BeA,MAzBf,SAAgBC,GAEZ,OACI,gCACI,0BAASC,GAAG,SAAZ,UACI,oDACA,yGAEJ,yBAASA,GAAG,YAAZ,SACI,uBACAC,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMK,OACbC,KAAK,SACLC,KAAK,OACLN,GAAG,SACHO,UAAU,eACVC,YAAY,yB,MCyBbC,MAzCf,SAAmBV,GAEf,IAAIW,EAAQX,EAAMY,QAAQC,QAAO,SAAAC,GAC7B,OAAOA,EAAKC,SAASC,cAAcC,SAASjB,EAAMK,OAAOW,kBAC1DE,KAAI,SAAAJ,GAEH,IAAMK,EAAQL,EAAKK,MAAMC,QAAQ,+DAAsD,cAGjFC,EAAaP,EAAKQ,IAAIC,MAAM,uCAC5BD,EAAG,UAAMD,EAAW,GAAjB,YAAuBA,EAAW,GAAlC,YAAwCA,EAAW,IAE5D,OAEI,cADA,CACA,WAASb,UAAU,MAAMP,GAAG,MAA5B,UACI,qBAAKO,UAAU,QAAQgB,IAAKV,EAAKW,QAASC,IAAKZ,EAAKC,WACpD,mBAAGP,UAAU,QAAb,SAAuBM,EAAKC,WAC5B,mBAAGP,UAAU,QAAb,SAAuBW,IACvB,mBAAGX,UAAU,QAAQmB,KAAMb,EAAKc,MAAhC,SAAyCd,EAAKc,QAC9C,mBAAGpB,UAAU,QAAb,SAAuBc,MALYR,EAAKb,OAUpD,OACI,0BAASO,UAAU,YAAnB,UACI,yBAAQA,UAAU,MAAMP,GAAG,mBAA3B,UACI,oBAAIO,UAAU,QAAd,mBACA,oBAAIA,UAAU,QAAQqB,QAAS7B,EAAM8B,WAArC,kBACA,oBAAItB,UAAU,QAAQqB,QAAS7B,EAAM+B,YAArC,mBACA,oBAAIvB,UAAU,QAAQqB,QAAS7B,EAAMgC,YAArC,mBACA,oBAAIxB,UAAU,QAAQqB,QAAS7B,EAAMiC,UAArC,oBAGJ,qBAAKzB,UAAU,gBAAf,SACKG,Q,iBC3BFuB,EAPH,CACR7B,OAAQ,SAAU8B,GACd,OAAOC,IAAMC,IAJL,6BAImBF,KCmJpBG,E,4MAhJXC,MAAQ,CACJlC,OAAQ,GACRO,QAAS,GACT4B,WAAW,G,EAQfC,kBAAoB,WAChBP,EAAI7B,OAAO,eACNqC,MAAK,SAAAC,GAEF,IAAIC,EAAgBD,EAAIE,KAAKjC,QAAQM,KAAI,SAAAJ,GACrC,IAAIK,EAAQL,EAAKK,MAAMC,QAAQ,MAAO,IAOtC,GAJID,EAAM2B,OAAS,KACf3B,EAAQ,IAAI4B,OAAO,GAAK5B,EAAM2B,QAAU3B,GAGxCA,EAAM2B,OAAS,GAAI,CACnB,IAAME,EAAkB7B,EAAM2B,OAAS,GACvC3B,EAAQA,EAAM8B,MAAMD,EAAiB7B,EAAM2B,QAG/C,MAAO,CACH7C,GAAIa,EAAKoC,KACTzB,QAASX,EAAKW,QAAQ0B,MACtBpC,SAAS,GAAD,OAAKD,EAAKR,KAAK8C,MAAf,YAAwBtC,EAAKR,KAAK+C,MAC1ClC,MAAOA,EACPS,MAAOd,EAAKc,MACZN,IAAKR,EAAKQ,IAAIgC,KAAK/B,MAAM,WAAW,GAAGH,QAAQ,MAAO,QAI9D,EAAKmC,SAAS,CACV3C,QAASgC,EAAcY,MACnB,SAAUC,EAAGC,GACT,IAAIC,EAAQF,EAAE1C,SAAS6C,cACnBC,EAAQH,EAAE3C,SAAS6C,cACvB,OAAQD,EAAQE,EAAQ,EAAIF,EAAQE,GAAS,EAAI,UAKhEC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAGlC5D,kBAAoB,SAAA+D,GAChB,IAAM5D,EAAO4D,EAAMC,OAAO7D,KACpBF,EAAQ8D,EAAMC,OAAO/D,MAG3B,EAAKmD,SAAL,eACKjD,EAAOF,K,EAIhB2B,YAAc,WACV,EAAKwB,SAAS,CAAEf,WAAY,EAAKD,MAAMC,YACvC,IAAM4B,EAAQ,EAAK7B,MAAMC,UAEzBwB,QAAQC,IAAI,YACZ,EAAKV,SAAS,CACV3C,QAAS,EAAK2B,MAAM3B,QAAQ4C,MAAK,SAAUC,EAAGC,GAC1C,OAAQU,EAASX,EAAEtC,MAAQuC,EAAEvC,MAAUuC,EAAEvC,MAAQsC,EAAEtC,Y,EAK/DW,WAAa,WACT,EAAKyB,SAAS,CAAEf,WAAY,EAAKD,MAAMC,YACvC,IAAM4B,EAAQ,EAAK7B,MAAMC,UAEzBwB,QAAQC,IAAI,WAEZ,EAAKV,SAAS,CACV3C,QAAS,EAAK2B,MAAM3B,QAAQ4C,MACxB,SAAUC,EAAGC,GACT,IAAIW,EAAIZ,EAAE1C,SAAS6C,cACfU,EAAIZ,EAAE3C,SAAS6C,cAEnB,OAAQQ,EAASC,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,EAAMD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,Q,EAMzFtC,YAAc,WACV,EAAKuB,SAAS,CAAEf,WAAY,EAAKD,MAAMC,YACvC,IAAM4B,EAAQ,EAAK7B,MAAMC,UAEzBwB,QAAQC,IAAI,YAEZ,EAAKV,SAAS,CACV3C,QAAS,EAAK2B,MAAM3B,QAAQ4C,MACxB,SAAUC,EAAGC,GACT,IAAIW,EAAIZ,EAAE7B,MAAMgC,cACZU,EAAIZ,EAAE9B,MAAMgC,cAEhB,OAAQQ,EAASC,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,EAAMD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,Q,EAKzFrC,UAAY,WACR,EAAKsB,SAAS,CAAEf,WAAY,EAAKD,MAAMC,YACvC,IAAM4B,EAAQ,EAAK7B,MAAMC,UAEzBwB,QAAQC,IAAI,UACZ,EAAKV,SAAS,CACV3C,QAAS,EAAK2B,MAAM3B,QAAQ4C,MAAK,SAAUC,EAAGC,GAC1C,OAAQU,EAASX,EAAEnC,IAAMoC,EAAEpC,IAAQoC,EAAEpC,IAAMmC,EAAEnC,U,uDA5GzD,WACIiD,KAAK9B,sB,oBAiHT,WAEI,OACI,oCACI,cAAC,EAAD,CACIpC,OAAQkE,KAAKhC,MAAMlC,OAEnBF,kBAAmBoE,KAAKpE,oBAE5B,cAAC,EAAD,CACIS,QAAS2D,KAAKhC,MAAM3B,QACpBP,OAAQkE,KAAKhC,MAAMlC,OACnB2B,YAAauC,KAAKvC,YAClBF,WAAYyC,KAAKzC,WACjBC,YAAawC,KAAKxC,YAClBE,UAAWsC,KAAKtC,mB,GA1IlBuC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7049a4cd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n\n    return (\n        <nav>\n            <section id=\"header\">\n                <h1>Employee Directory</h1>\n                <p>CLick on headings to apply filters or use searchbar to narrow results</p>\n            </section>\n            <section id=\"searchbar\">\n                <input \n                onChange={props.handleInputChange}\n                value={props.search}\n                name=\"search\"\n                type=\"text\" \n                id=\"search\" \n                className=\"form-control\"\n                placeholder=\"Search by Name\"\n                \n                />\n            </section>\n        </nav>\n    )\n}\n\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Directory(props) {\n\n    let users = props.results.filter(user => {\n        return user.fullname.toLowerCase().includes(props.search.toLowerCase())\n    }).map(user => {\n        // Format the phone number\n        const phone = user.phone.replace(/^\\(?([0-9]{3})\\)?[-.●]?([0-9]{3})[-.●]?([0-9]{4})$/, \"($1) $2-$3\")\n\n        // Format the DOB date\n        const dobMatches = user.dob.match(/^([0-9]{4})?([0-9]{2})?([0-9]{2})?$/)\n        const dob = `${dobMatches[2]}/${dobMatches[3]}/${dobMatches[1]}`\n\n        return (\n            // Create section element for each user\n            <section className=\"row\" id=\"row\" key={user.id}>\n                <img className=\"col-2\" src={user.picture} alt={user.fullname} ></img>\n                <p className=\"col-3\" >{user.fullname}</p>\n                <p className=\"col-2\" >{phone}</p>\n                <a className=\"col-3\" href={user.email} >{user.email}</a>\n                <p className=\"col-2\" >{dob}</p>\n            </section>\n        )\n    })\n\n    return (\n        <article className=\"container\">\n            <header className=\"row\" id=\"directory-header\">\n                <h5 className=\"col-2\">Image</h5>\n                <h5 className=\"col-3\" onClick={props.sortByName} >Name</h5>\n                <h5 className=\"col-2\" onClick={props.sortByPhone}>Phone</h5>\n                <h5 className=\"col-3\" onClick={props.sortByEmail}>Email</h5>\n                <h5 className=\"col-2\" onClick={props.sortByDOB}>DOB</h5>\n            </header>\n\n            <div className=\"employee-list\">\n                {users}\n            </div>\n        </article>\n    )\n}\n\nexport default Directory;","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/\";\n\nconst API = {\n    search: function (query) {\n        return axios.get(BASEURL + query);\n    }\n}\n\n// Export an object with a \"search\" method that searches the randomuser API for the passed limit of results\nexport default API;\n","import './App.css';\nimport Header from \"./components/Header\";\nimport Directory from \"./components/Directory\";\nimport { Component } from 'react';\nimport API from \"./utils/API\";\n\n\nclass App extends Component {\n\n    state = {\n        search: \"\",     // Storage the search value\n        results: [],      // Sorage Users data\n        ascending: true  // Storage the order for sortering\n    };\n\n    // When this component mounts, search the Giphy API for pictures of kittens\n    componentDidMount() {\n        this.searchRandomUsers();\n    }\n\n    searchRandomUsers = () => {\n        API.search(\"?results=10\")\n            .then(res => {\n\n                let formattedData = res.data.results.map(user => {\n                    let phone = user.phone.replace(/\\D/g, \"\");\n\n                    // Add extra Zeros for incompleted phone number\n                    if (phone.length < 10) {\n                        phone = \"0\".repeat(10 - phone.length) + phone;\n                    }\n                    // Remove international code from phone number\n                    if (phone.length > 10) {\n                        const interCodeLength = phone.length - 10;\n                        phone = phone.slice(interCodeLength, phone.length)\n                    }\n\n                    return {\n                        id: user.cell,\n                        picture: user.picture.large,\n                        fullname: `${user.name.first} ${user.name.last}`,\n                        phone: phone,\n                        email: user.email,\n                        dob: user.dob.date.match(/(.{10})/)[0].replace(/\\D/g, \"\")\n                    }\n                })\n\n                this.setState({\n                    results: formattedData.sort(\n                        function (a, b) {\n                            var nameA = a.fullname.toUpperCase(); // ignore upper and lowercase\n                            var nameB = b.fullname.toUpperCase(); // ignore upper and lowercase\n                            return (nameA < nameB ? 1 : nameA > nameB ? -1 : 0)\n                        }\n                    )\n                })\n            })\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    sortByPhone = () => {\n        this.setState({ ascending: !this.state.ascending })\n        const order = this.state.ascending;\n\n        console.log(\"by phone\")\n        this.setState({\n            results: this.state.results.sort(function (a, b) {\n                return (order ? (a.phone - b.phone) : (b.phone - a.phone));\n            })\n        })\n    }\n\n    sortByName = () => {\n        this.setState({ ascending: !this.state.ascending })\n        const order = this.state.ascending;\n\n        console.log(\"by name\")\n\n        this.setState({\n            results: this.state.results.sort(\n                function (a, b) {\n                    var x = a.fullname.toUpperCase(); // ignore upper and lowercase\n                    var y = b.fullname.toUpperCase(); // ignore upper and lowercase\n\n                    return (order ? (x < y ? 1 : x > y ? -1 : 0) : (x < y ? -1 : x > y ? 1 : 0));\n                })\n        })\n    }\n\n\n    sortByEmail = () => {\n        this.setState({ ascending: !this.state.ascending })\n        const order = this.state.ascending;\n\n        console.log(\"by email\")\n\n        this.setState({\n            results: this.state.results.sort(\n                function (a, b) {\n                    var x = a.email.toUpperCase(); // ignore upper and lowercase\n                    var y = b.email.toUpperCase(); // ignore upper and lowercase\n\n                    return (order ? (x < y ? 1 : x > y ? -1 : 0) : (x < y ? -1 : x > y ? 1 : 0));\n                })\n        })\n    }\n\n    sortByDOB = () => {\n        this.setState({ ascending: !this.state.ascending })\n        const order = this.state.ascending;\n\n        console.log(\"by DOB\")\n        this.setState({\n            results: this.state.results.sort(function (a, b) {\n                return (order ? (a.dob - b.dob) : (b.dob - a.dob));\n            })\n        })\n    }\n\n\n    render() {\n\n        return (\n            <article>\n                <Header\n                    search={this.state.search}\n                    // handleFormSubmit={this.handleFormSubmit}\n                    handleInputChange={this.handleInputChange}\n                />\n                <Directory\n                    results={this.state.results}\n                    search={this.state.search}\n                    sortByEmail={this.sortByEmail}\n                    sortByName={this.sortByName}\n                    sortByPhone={this.sortByPhone}\n                    sortByDOB={this.sortByDOB}\n                />\n            </article>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
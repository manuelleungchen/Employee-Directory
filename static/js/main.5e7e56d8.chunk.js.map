{"version":3,"sources":["components/Header/index.js","components/Directory/index.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","id","onChange","handleInputChange","value","search","name","type","className","placeholder","Directory","users","results","map","user","phone","replace","dob","date","match","src","picture","medium","alt","thumbnail","first","last","href","email","cell","query","axios","get","App","state","searchRandomUsers","API","then","res","setState","data","catch","err","console","log","event","target","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUA4BeA,MAzBf,SAAgBC,GAEZ,OACI,gCACI,0BAASC,GAAG,SAAZ,UACI,oDACA,yGAEJ,yBAASA,GAAG,YAAZ,SACI,uBACAC,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMK,OACbC,KAAK,SACLC,KAAK,OACLN,GAAG,SACHO,UAAU,eACVC,YAAY,yB,MC2BbC,MA3Cf,SAAmBV,GAEf,IAAIW,EAAQX,EAAMY,QAAQC,KAAI,SAAAC,GAC1B,IAAIC,EAAQD,EAAKC,MAAMC,QAAQ,MAAO,IAEzB,OAAVD,IACCA,EAAQD,EAAKC,OAOjB,IAAIE,EAAMH,EAAKG,IAAIC,KAAKC,MAAM,WAAW,GAEzC,OACI,0BAASX,UAAU,MAAMP,GAAG,MAA5B,UACI,qBAAKO,UAAU,QAAQY,IAAKN,EAAKO,QAAQC,OAAQC,IAAKT,EAAKO,QAAQG,YACnE,oBAAGhB,UAAU,QAAb,UAAsBM,EAAKR,KAAKmB,MAAhC,IAAwCX,EAAKR,KAAKoB,QAClD,mBAAGlB,UAAU,QAAb,SAAsBO,IACtB,mBAAGP,UAAU,QAAQmB,KAAK,eAA1B,SAA0Cb,EAAKc,QAC/C,mBAAGpB,UAAU,QAAb,SAAsBS,MALaH,EAAKe,SAUpD,OACI,0BAASrB,UAAU,YAAnB,UACI,yBAAQA,UAAU,MAAMP,GAAG,mBAA3B,UACI,oBAAIO,UAAU,QAAd,mBACA,oBAAIA,UAAU,QAAd,kBACA,oBAAIA,UAAU,QAAd,mBACA,oBAAIA,UAAU,QAAd,mBACA,oBAAIA,UAAU,QAAd,oBAGJ,qBAAKA,UAAU,gBAAf,SACKG,Q,iBCnCF,EACH,SAAUmB,GACd,OAAOC,IAAMC,IALL,6BAKmBF,IC0DpBG,E,4MAxDXC,MAAQ,CACJ7B,OAAQ,GACRO,QAAS,I,EAQXuB,kBAAoB,WAClBC,EAAW,eACRC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAE3B,QAAS0B,EAAIE,KAAK5B,aAGnC6B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAG9BvC,kBAAoB,SAAA0C,GAClB,IAAMvC,EAAOuC,EAAMC,OAAOxC,KACpBF,EAAQyC,EAAMC,OAAO1C,MAC3B,EAAKmC,SAAL,eACGjC,EAAOF,IAGG,EAAK8B,MAAMtB,QAAQC,KAAI,SAAAC,GAEhC,OADA6B,QAAQC,IAAI9B,GACLA,M,uDAtBb,WACEiC,KAAKZ,sB,oBAiCT,WAEI,OACI,oCACI,cAAC,EAAD,CACA9B,OAAQ0C,KAAKb,MAAM7B,OAEnBF,kBAAmB4C,KAAK5C,oBAExB,cAAC,EAAD,CAAWS,QAASmC,KAAKb,MAAMtB,iB,GAnD7BoC,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e7e56d8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n\n    return (\n        <nav>\n            <section id=\"header\">\n                <h1>Employee Directory</h1>\n                <p>CLick on headings to apply filters or use searchbar to narrow results</p>\n            </section>\n            <section id=\"searchbar\">\n                <input \n                onChange={props.handleInputChange}\n                value={props.search}\n                name=\"search\"\n                type=\"text\" \n                id=\"search\" \n                className=\"form-control\"\n                placeholder=\"Search by Name\"\n                \n                />\n            </section>\n        </nav>\n    )\n}\n\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Directory(props) {\n\n    let users = props.results.map(user => {\n        let phone = user.phone.replace(/\\D/g, \"\")\n\n        if(phone === null) {\n            phone = user.phone\n        }\n    \n        // else{\n        //     phone = phone.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n        // }\n       \n        let dob = user.dob.date.match(/(.{10})/)[0]\n        \n        return (\n            <section className=\"row\" id=\"row\" key={user.cell}>\n                <img className=\"col-2\" src={user.picture.medium} alt={user.picture.thumbnail}></img>\n                <p className=\"col-3\">{user.name.first} {user.name.last}</p>\n                <p className=\"col-2\">{phone}</p>\n                <a className=\"col-3\" href=\"{user.email}\">{user.email}</a>\n                <p className=\"col-2\">{dob}</p>\n            </section>\n        )\n    })\n\n    return (\n        <article className=\"container\">\n            <header className=\"row\" id=\"directory-header\">\n                <h5 className=\"col-2\">Image</h5>\n                <h5 className=\"col-3\">Name</h5>\n                <h5 className=\"col-2\">Phone</h5>\n                <h5 className=\"col-3\">Email</h5>\n                <h5 className=\"col-2\">DOB</h5>\n            </header>\n\n            <div className=\"employee-list\">\n                {users}\n            </div>\n        </article>\n    )\n}\n\nexport default Directory;","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/\";\n\n// Export an object with a \"search\" method that searches the randomuser API for the passed limit of results\nexport default {\n    search: function (query) {\n        return axios.get(BASEURL + query);\n    }\n};\n","import './App.css';\nimport Header from \"./components/Header\";\nimport Directory from \"./components/Directory\";\nimport { Component } from 'react';\nimport API from \"./utils/API\";\n\n\nclass App extends Component {\n\n    state = {\n        search: \"\",\n        results: []\n      };\n    \n      // When this component mounts, search the Giphy API for pictures of kittens\n      componentDidMount() {\n        this.searchRandomUsers();\n      }\n    \n      searchRandomUsers = () => {\n        API.search(\"?results=10\")\n          .then(res => {\n            this.setState({ results: res.data.results })\n            // console.log(res.data.results)\n          })\n          .catch(err => console.log(err));\n      };\n    \n      handleInputChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n          [name]: value\n        });\n\n        let newRes = this.state.results.map(user => {\n            console.log(user)\n            return user;\n        })\n\n      \n      };\n    \n    //   // When the form is submitted, search the Giphy API for `this.state.search`\n    //   handleFormSubmit = event => {\n    //     event.preventDefault();\n    //     this.searchGiphy(this.state.search);\n    //   };\n\n    render(){\n\n        return (\n            <article>\n                <Header \n                search={this.state.search}\n                // handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n                />\n                <Directory results={this.state.results}/>\n            </article>\n        );\n    }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}